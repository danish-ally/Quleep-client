{"ast":null,"code":"var _jsxFileName = \"/home/stormtech/QuleepAssisment/client/src/pages/AllProducts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination, TableFooter } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: \"80%\"\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"10px 10px\",\n    maxWidth: \"80%\"\n  },\n  tableHeaderCell: {\n    fontWeight: \"bold\",\n    color: \"black\"\n  },\n  name: {\n    fontWeight: \"bold\"\n  }\n}));\n\nfunction AllProducts() {\n  _s();\n\n  var _products$slice, _rows;\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:9000/api/product\").then(response => {\n      setProducts(response.data);\n    });\n  }, []);\n  console.log(products);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: \"card__body\",\n    style: {\n      width: \"80%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          className: \"tableRow\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: products === null || products === void 0 ? void 0 : (_products$slice = products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)) === null || _products$slice === void 0 ? void 0 : _products$slice.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n          className: \"tableBody\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: [item.name, /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.schedules\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), item.status === 'Active' ? /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              //background: aliceblue;\n              // color: darkgreen;\n              // font-weight: bold;\n              color: 'darkgreen',\n              fontWeight: 'bold',\n              backgroundColor: 'aliceblue'\n            },\n            children: item.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n            style: {\n              //background: aliceblue;\n              // color: darkgreen;\n              // font-weight: bold;\n              color: 'darkred',\n              fontWeight: 'bold',\n              backgroundColor: 'lightpink'\n            },\n            children: item.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 37\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 15],\n          component: \"div\",\n          count: (_rows = rows) === null || _rows === void 0 ? void 0 : _rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AllProducts, \"dlqpdy+WQFqfB6dtYHASmYaaUUk=\", false, function () {\n  return [useStyles];\n});\n\n_c = AllProducts;\nexport default AllProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"sources":["/home/stormtech/QuleepAssisment/client/src/pages/AllProducts.jsx"],"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","TableFooter","axios","useStyles","theme","table","minWidth","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","color","name","AllProducts","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","products","setProducts","get","then","response","data","console","log","width","slice","map","item","category","schedules","status","backgroundColor","_id","rows","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    TablePagination,\n    TableFooter,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    table: {\n        minWidth: \"80%\",\n    },\n    tableContainer: {\n        borderRadius: 15,\n        margin: \"10px 10px\",\n        maxWidth: \"80%\",\n    },\n    tableHeaderCell: {\n        fontWeight: \"bold\",\n        color: \"black\",\n    },\n\n    name: {\n        fontWeight: \"bold\",\n    },\n\n}));\n\nfunction AllProducts() {\n\n\n\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n\n    \n\n\n\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n      axios.get(\"http://localhost:9000/api/product\").then((response) => {\n        setProducts(response.data);\n      });\n    }, []);\n\n    console.log(products)\n\n\n    return (\n        <TableContainer component={Paper} className=\"card__body\" style={{\n            width: \"80%\"\n        }}>\n            <Table className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow className=\"tableRow\">\n                        <TableCell className={classes.tableHeaderCell}>\n                            Image\n                        </TableCell>\n                        <TableCell className={classes.tableHeaderCell}>\n                            Name\n                        </TableCell>\n                        <TableCell className={classes.tableHeaderCell}>\n                            Description\n                        </TableCell>\n                        <TableCell className={classes.tableHeaderCell}>\n                            Price\n                        </TableCell>\n                        \n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {products\n                        ?.slice(\n                            page * rowsPerPage,\n                            page * rowsPerPage + rowsPerPage\n                        )\n                        ?.map((item) => (\n                            <TableRow key={item._id} className=\"tableBody\">\n                                <TableCell>\n                                    {item.name}\n                                    <img src=\"\" alt=\"\" />\n                                </TableCell>\n                                <TableCell>{item.category}</TableCell>\n                                <TableCell>{item.schedules}</TableCell>\n                                {item.status === 'Active' ? (\n\n                                    <TableCell style={{\n                                        //background: aliceblue;\n                                        // color: darkgreen;\n                                        // font-weight: bold;\n                                        color: 'darkgreen',\n                                        fontWeight: 'bold',\n                                        backgroundColor: 'aliceblue'\n                                    }}>{item.status}</TableCell>\n\n                                ) : (\n                                    <TableCell style={{\n                                        //background: aliceblue;\n                                        // color: darkgreen;\n                                        // font-weight: bold;\n                                        color: 'darkred',\n                                        fontWeight: 'bold',\n                                        backgroundColor: 'lightpink'\n                                    }}>{item.status}</TableCell>\n                                )}\n\n                                \n                            </TableRow>\n                        ))}\n                </TableBody>\n                <TableFooter>\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 15]}\n                        component=\"div\"\n                        count={rows?.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                    />\n                </TableFooter>\n            </Table>\n        </TableContainer>\n    );\n}\n\n\nexport default AllProducts;"]},"metadata":{},"sourceType":"module"}