{"ast":null,"code":"var _jsxFileName = \"/home/stormtech/QuleepAssisment/client/src/pages/AllProducts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TablePagination, TableFooter } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: \"80%\"\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"10px 10px\",\n    maxWidth: \"80%\"\n  },\n  tableHeaderCell: {\n    fontWeight: \"bold\",\n    color: \"black\"\n  },\n  name: {\n    fontWeight: \"bold\"\n  }\n}));\n\nfunction AllProducts() {\n  _s();\n\n  var _products$slice, _rows;\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:9000/api/product\").then(response => {\n      setProducts(response.data);\n    });\n  }, []);\n  console.log(products);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    className: \"card__body\",\n    style: {\n      width: \"80%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"simple table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          className: \"tableRow\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.tableHeaderCell,\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: products === null || products === void 0 ? void 0 : (_products$slice = products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)) === null || _products$slice === void 0 ? void 0 : _products$slice.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n          className: \"tableBody\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.images[0],\n              alt: \"img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [\" \", item.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n        children: /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [5, 10, 15],\n          component: \"div\",\n          count: (_rows = rows) === null || _rows === void 0 ? void 0 : _rows.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllProducts, \"dlqpdy+WQFqfB6dtYHASmYaaUUk=\", false, function () {\n  return [useStyles];\n});\n\n_c = AllProducts;\nexport default AllProducts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllProducts\");","map":{"version":3,"sources":["/home/stormtech/QuleepAssisment/client/src/pages/AllProducts.jsx"],"names":["React","useState","useEffect","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","TableFooter","axios","useStyles","theme","table","minWidth","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","color","name","AllProducts","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","products","setProducts","get","then","response","data","console","log","width","slice","map","item","images","description","_id","rows","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TablePagination,\n  TableFooter,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: \"80%\",\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: \"10px 10px\",\n    maxWidth: \"80%\",\n  },\n  tableHeaderCell: {\n    fontWeight: \"bold\",\n    color: \"black\",\n  },\n\n  name: {\n    fontWeight: \"bold\",\n  },\n}));\n\nfunction AllProducts() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"http://localhost:9000/api/product\").then((response) => {\n      setProducts(response.data);\n    });\n  }, []);\n\n  console.log(products);\n\n  return (\n    <TableContainer\n      component={Paper}\n      className=\"card__body\"\n      style={{\n        width: \"80%\",\n      }}\n    >\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow className=\"tableRow\">\n            <TableCell className={classes.tableHeaderCell}>Image</TableCell>\n            <TableCell className={classes.tableHeaderCell}>Name</TableCell>\n            <TableCell className={classes.tableHeaderCell}>\n              Description\n            </TableCell>\n            <TableCell className={classes.tableHeaderCell}>Price</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {products\n            ?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            ?.map((item) => (\n              <TableRow key={item._id} className=\"tableBody\">\n                <TableCell>\n                  <img src={item.images[0]} alt=\"img\" />\n                </TableCell>\n                <TableCell> {item.name}</TableCell>\n                <TableCell>{item.description}</TableCell>\n                \n              </TableRow>\n            ))}\n        </TableBody>\n        <TableFooter>\n          <TablePagination\n            rowsPerPageOptions={[5, 10, 15]}\n            component=\"div\"\n            count={rows?.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  );\n}\n\nexport default AllProducts;\n"]},"metadata":{},"sourceType":"module"}